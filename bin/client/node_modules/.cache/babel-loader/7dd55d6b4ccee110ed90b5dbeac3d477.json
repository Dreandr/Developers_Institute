{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Card from './Components/Card';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      let words = [];\n      let definitions = [];\n\n      for (let i = 0; i < 6; i++) {\n        fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n          }\n        }).then(result => result.json()).then(data => {\n          words.push(data.word);\n          definitions.push(data.results);\n        }).catch(err => console.log(err));\n      }\n\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          words: words,\n          definitions: definitions\n        }\n      });\n      console.log(this.state.user.words);\n      console.log(this.state.user.definitions);\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words: [],\n        definitions: []\n      }\n    };\n  } //Function to load the user when register form is inputed(pass function to Register Component)\n\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }),\n    /* Jsx Javascript expression to know when to change the route */\n    route === 'home' ?\n    /*#__PURE__*/\n    //if this is true then route to home dashboard\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      id: \"board_1\",\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"card_1\",\n      className: \"card\",\n      draggable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Card one\")), /*#__PURE__*/React.createElement(Board, {\n      id: \"board_2\",\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"card_1\",\n      className: \"card\",\n      draggable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Card two\")))) : //else if route is Signin go to Signin\n    route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    }) :\n    /*#__PURE__*/\n    //else return the route to Register\n    React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/App.js"],"names":["React","Component","Register","Signin","Navigation","Board","Card","App","constructor","loadUser","data","words","definitions","i","fetch","then","result","json","push","word","results","catch","err","console","log","setState","user","id","name","email","entries","joined","state","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board'\nimport Card from './Components/Card'\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n\n\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n\n      user: {\n\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words:[],\n        definitions:[]\n      },\n\n    }\n  }\n\n  //Function to load the user when register form is inputed(pass function to Register Component)\n  loadUser = (data) => {\n    let words = [];\n    let definitions = [];\n    for (let i = 0; i < 6;i++ ){\n      fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n      {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n        }\n      })\n      .then(result => result.json())\n      .then(data => {\n                words.push(data.word);\n                definitions.push(data.results);\n      })\n      .catch(err => console.log(err))\n    }\n    this.setState({user: {\n\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      words:words,\n      definitions:definitions\n    }})\n    console.log(this.state.user.words)\n    console.log(this.state.user.definitions)\n  }\n\n\n\n\n  //Function to Change Routes from Signin and Home Dashboard\n  onRouteChange = (route) => {\n\n    if (route === 'signout') {\n\n      this.setState({isSignedIn: false});\n\n    } else if (route === 'home') {\n\n      this.setState({isSignedIn: true});\n    }\n\n    this.setState({route: route});\n  }\n\n  render() {\n\n    //Destructuring our states instead of using this.state\n    const { isSignedIn, route} = this.state;\n\n\n    return (\n      <div className=\"App\">\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n\n        { /* Jsx Javascript expression to know when to change the route */\n\n         route === 'home' ? //if this is true then route to home dashboard\n\n             <div>\n\n                <main className=\"flexbox\">\n                  <Board id=\"board_1\" className=\"board\">\n                    <Card id=\"card_1\" className=\"card\" draggable=\"true\">\n                      Card one\n                    </Card>\n                  </Board>\n                  <Board id=\"board_2\" className=\"board\">\n                    <Card id=\"card_1\" className=\"card\" draggable=\"true\">\n                      Card two\n                    </Card>\n                  </Board>\n                </main>\n\n             </div>\n\n           : (   //else if route is Signin go to Signin\n\n             route === 'signin' ?\n\n             <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n           :\n\n             //else return the route to Register\n\n             <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n\n\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}