{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words: [],\n        definitions: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        return {\n          unseen: \"does not display\"\n        };\n      });\n    }, 1000);\n    let words = [];\n    let definitions = [];\n\n    for (let i = 0; i < 6; i++) {\n      fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n        }\n      }).then(result => result.json()).then(data => {\n        words.push(data.word);\n        definitions.push(data.results);\n      }).catch(err => console.log(err));\n    }\n\n    this.setState({\n      user: {\n        words: words,\n        definitions: definitions\n      }\n    });\n    console.log(this.state.user);\n  } //Function to load the user when register form is inputed(pass function to Register Component)\n\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n\n    const clickHandler = () => {\n      console.log(\"Click!\");\n      let counter = 0;\n\n      for (let i = 0; i < 6; i++) {\n        let elem = document.getElementById(i);\n\n        if (elem.children[1].children.length === 1) {\n          counter++;\n        }\n      }\n\n      if (counter < 5) {\n        alert(\"Please drag all definitions to the right words!\");\n      } else {\n        let counter2 = 0;\n\n        for (let i = 0; i < 6; i++) {\n          let elem = document.getElementById(i);\n\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++;\n          }\n        }\n\n        if (counter2 == 6) {\n          alert(\"Well done!\");\n          this.setState({\n            user: {\n              words: [],\n              definitions: []\n            }\n          });\n          let words = [];\n          let definitions = [];\n\n          for (let i = 0; i < 6; i++) {\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n              \"method\": \"GET\",\n              \"headers\": {\n                \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n              }\n            }).then(result => result.json()).then(data => {\n              words.push(data.word);\n              definitions.push(data.results);\n            }).catch(err => console.log(err));\n          }\n\n          this.setState({\n            user: {\n              words: words,\n              definitions: definitions\n            }\n          });\n        } else {\n          alert(\"Something is wrong. Try again!\");\n        }\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }),\n    /* Jsx Javascript expression to know when to change the route */\n    route === 'home' ?\n    /*#__PURE__*/\n    //if this is true then route to home dashboard\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }\n    }, \"// \", /*#__PURE__*/React.createElement(Board, {\n      words: this.state.user.words,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }), \"// \", /*#__PURE__*/React.createElement(Board2, {\n      definitions: this.state.user.definitions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }\n    }, \"Done!\")) : //else if route is Signin go to Signin\n    route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 14\n      }\n    }) :\n    /*#__PURE__*/\n    //else return the route to Register\n    React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/App.js"],"names":["React","Component","Register","Signin","Navigation","Board","Board2","Card","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","onRouteChange","route","isSignedIn","state","words","definitions","componentDidMount","setInterval","unseen","i","fetch","then","result","json","push","word","results","catch","err","console","log","render","clickHandler","counter","elem","document","getElementById","children","length","alert","counter2","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n\n\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n\n      user: {\n\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words:[],\n        definitions:[]\n      },\n\n    }\n  }\n  componentDidMount(){\n  setInterval(() => {\n           this.setState(() => {\n               return { unseen: \"does not display\" }\n           });\n       }, 1000);\n  let words = [];\n  let definitions = [];\n  for (let i = 0; i < 6;i++ ){\n    fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n    {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n      }\n    })\n    .then(result => result.json())\n    .then(data => {\n              words.push(data.word);\n              definitions.push(data.results);\n    })\n    .catch(err => console.log(err))\n    }\n  this.setState({user:{words:words,definitions:definitions}})\n  console.log(this.state.user)\n  }\n  //Function to load the user when register form is inputed(pass function to Register Component)\n  loadUser = (data) => {\n    this.setState({user: {\n\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n  }\n\n\n\n\n  //Function to Change Routes from Signin and Home Dashboard\n  onRouteChange = (route) => {\n\n    if (route === 'signout') {\n\n      this.setState({isSignedIn: false});\n\n    } else if (route === 'home') {\n\n      this.setState({isSignedIn: true});\n        }\n\n    this.setState({route: route});\n  }\n\n  render() {\n\n    //Destructuring our states instead of using this.state\n    const { isSignedIn, route} = this.state;\n    const clickHandler = () => {\n      console.log(\"Click!\")\n      let counter = 0;\n      for (let i = 0; i<6; i++){\n        let elem = document.getElementById(i);\n        if (elem.children[1].children.length === 1) {\n          counter++\n        }\n      }\n      if (counter < 5){\n        alert(\"Please drag all definitions to the right words!\")\n      } else {\n        let counter2 = 0;\n        for (let i = 0; i<6; i++){\n          let elem = document.getElementById(i);\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++\n          }\n        }\n        if (counter2 == 6) {\n          alert(\"Well done!\")\n          this.setState({user: {words: [],definitions:[]}})\n          let words = [];\n          let definitions = [];\n          for (let i = 0; i < 6;i++ ){\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n            {\n              \"method\": \"GET\",\n              \"headers\": {\n                \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n              }\n            })\n            .then(result => result.json())\n            .then(data => {\n                      words.push(data.word);\n                      definitions.push(data.results);\n            })\n            .catch(err => console.log(err))\n            }\n          this.setState({user:{words:words,definitions:definitions}})\n        } else {\n          alert(\"Something is wrong. Try again!\")\n        }\n      }\n    }\n\n    return (\n      <div className=\"App\">\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n\n        { /* Jsx Javascript expression to know when to change the route */\n\n         route === 'home' ? //if this is true then route to home dashboard\n\n             <div>\n               // <Board words={this.state.user.words}/>\n               // <Board2 definitions={this.state.user.definitions}/>\n               <button onClick={clickHandler}>Done!</button>\n             </div>\n\n           : (   //else if route is Signin go to Signin\n\n             route === 'signin' ?\n\n             <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n           :\n\n             //else return the route to Register\n\n             <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n\n\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}