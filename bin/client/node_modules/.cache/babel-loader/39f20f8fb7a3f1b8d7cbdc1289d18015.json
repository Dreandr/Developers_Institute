{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n        let words = [];\n        let definitions = [];\n        let defs_2 = [];\n\n        for (let i = 0; i < 6; i++) {\n          fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n            }\n          }).then(result => result.json()).then(data => {\n            function shuffle(a) {\n              let b = [...a];\n\n              for (let i = b.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [b[i], b[j]] = [b[j], b[i]];\n              }\n\n              return b;\n            }\n\n            words.push(data.word);\n            console.log(data.word);\n            definitions.push(data.results);\n\n            if (definitions.length === 6) {\n              defs_2 = shuffle(definitions);\n              console.log(defs_2);\n            }\n          }).catch(err => console.log(err));\n        }\n\n        this.setState({\n          user: {\n            words: words,\n            definitions: definitions,\n            defs_shuffled: defs_2\n          }\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words: [],\n        definitions: [],\n        defs_shuffled: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    setInterval(() => {\n      this.setState(() => {\n        return {\n          unseen: \"does not display\"\n        };\n      });\n    }, 1000);\n  } //Function to load the user when register form is inputed(pass function to Register Component)\n\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n\n    const clickHandler = () => {\n      console.log(\"Click!\");\n      let counter = 0;\n\n      for (let i = 0; i < 6; i++) {\n        let elem = document.getElementById(i);\n\n        if (elem.children[1].children.length === 1) {\n          counter++;\n        }\n      }\n\n      if (counter < 5) {\n        alert(\"Please drag all definitions to the right words!\");\n      } else {\n        let counter2 = 0;\n\n        for (let i = 0; i < 6; i++) {\n          let elem = document.getElementById(i);\n\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++;\n          }\n        }\n\n        if (counter2 == 6) {\n          alert(\"Well done!\");\n\n          if (!this._isMounted) {\n            this.setState({\n              user: {\n                words: [],\n                definitions: []\n              }\n            });\n          }\n\n          let words = [];\n          let definitions = [];\n\n          for (let i = 0; i < 6; i++) {\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n              \"method\": \"GET\",\n              \"headers\": {\n                \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n              }\n            }).then(result => result.json()).then(data => {\n              if (this.state.user.words.length === 6) {\n                let board = document.getElementsByClassName(\"board\")[1];\n\n                for (let i = 0; i < 6; i++) {\n                  let elem = document.getElementById(`def${i}`);\n                  elem.parentElement.style.height = \"50px\";\n                  board.appendChild(elem);\n                  console.log(`elem ${i} done!`);\n                }\n\n                this.setState({\n                  user: {\n                    words: [data.word],\n                    definitions: [data.results]\n                  }\n                });\n              } else {\n                this.setState({\n                  user: {\n                    words: [...this.state.user.words, data.word],\n                    definitions: [...this.state.user.definitions, data.results]\n                  }\n                });\n              }\n            }).catch(err => console.log(err));\n          }\n        } else {\n          alert(\"Something is wrong. Try again!\");\n        }\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }),\n    /* Jsx Javascript expression to know when to change the route */\n    route === 'home' ?\n    /*#__PURE__*/\n    //if this is true then route to home dashboard\n    React.createElement(\"div\", {\n      className: \"flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      words: this.state.user.words,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Board2, {\n      definitions: this.state.user.definitions,\n      shuffled: this.state.user.defs_shuffled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 16\n      }\n    }, \"Done!\")) : //else if route is Signin go to Signin\n    route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 14\n      }\n    }) :\n    /*#__PURE__*/\n    //else return the route to Register\n    React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/App.js"],"names":["React","Component","Register","Signin","Navigation","Board","Board2","Card","App","constructor","_isMounted","loadUser","data","setState","user","id","name","email","entries","joined","onRouteChange","route","isSignedIn","words","definitions","defs_2","i","fetch","then","result","json","shuffle","a","b","length","j","Math","floor","random","push","word","console","log","results","catch","err","defs_shuffled","state","componentDidMount","setInterval","unseen","componentWillUnmount","render","clickHandler","counter","elem","document","getElementById","children","alert","counter2","parseInt","board","getElementsByClassName","parentElement","style","height","appendChild"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\n\n\nclass App extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n\n    this.state = {\n\n\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n\n      user: {\n\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words:[],\n        definitions:[],\n        defs_shuffled:[]\n      }\n\n    }\n  }\n  componentDidMount(){\n  this._isMounted = true;\n  setInterval(() => {\n           this.setState(() => {\n               return { unseen: \"does not display\" }\n           });\n       }, 1000);\n  }\n  //Function to load the user when register form is inputed(pass function to Register Component)\n  loadUser = (data) => {\n    this.setState({user: {\n\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n  }\n\n\n\n\n  //Function to Change Routes from Signin and Home Dashboard\n  onRouteChange = (route) => {\n\n    if (route === 'signout') {\n\n      this.setState({isSignedIn: false});\n\n    } else if (route === 'home') {\n\n      this.setState({isSignedIn: true});\n      let words = [];\n      let definitions = [];\n      let defs_2 = [];\n      for (let i = 0; i < 6;i++ ){\n        fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n        {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n          }\n        })\n        .then(result => result.json())\n        .then(data => {\n                  function shuffle(a) {\n                      let b = [...a];\n                      for (let i = b.length - 1; i > 0; i--) {\n                          const j = Math.floor(Math.random() * (i + 1));\n                          [b[i], b[j]] = [b[j], b[i]];\n                      }\n                      return b;\n                  }\n                  words.push(data.word);\n                  console.log(data.word);\n                  definitions.push(data.results);\n                  if (definitions.length === 6) {\n                    defs_2 = shuffle(definitions)\n                    console.log(defs_2)\n                    \n                  }\n        })\n        .catch(err => console.log(err))\n        }\n    this.setState({user:{words:words,definitions:definitions, defs_shuffled:defs_2}})\n  }\n    this.setState({route: route});\n  }\n\n  componentWillUnmount() {\n   this._isMounted = false;\n }\n\n  render() {\n\n    //Destructuring our states instead of using this.state\n    const { isSignedIn, route} = this.state;\n    const clickHandler = () => {\n      console.log(\"Click!\")\n      let counter = 0;\n      for (let i = 0; i<6; i++){\n        let elem = document.getElementById(i);\n        if (elem.children[1].children.length === 1) {\n          counter++\n        }\n      }\n      if (counter < 5){\n        alert(\"Please drag all definitions to the right words!\")\n      } else {\n        let counter2 = 0;\n        for (let i = 0; i<6; i++){\n          let elem = document.getElementById(i);\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++\n          }\n        }\n        if (counter2 == 6) {\n          alert(\"Well done!\")\n          if(!this._isMounted ) {this.setState({user:{words:[],definitions:[]}}) }\n          let words = [];\n          let definitions = [];\n          for (let i = 0; i < 6;i++ ){\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n             {\n               \"method\": \"GET\",\n               \"headers\": {\n                 \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                 \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n               }\n             })\n             .then(result => result.json())\n             .then(data => {\n                      if (this.state.user.words.length === 6){\n                        let board = document.getElementsByClassName(\"board\")[1]\n                        for (let i = 0;i<6;i++){\n                          let elem = document.getElementById(`def${i}`)\n                          elem.parentElement.style.height = \"50px\"\n                          board.appendChild(elem)\n                          console.log(`elem ${i} done!`)\n                        }\n                        this.setState({user:{words:[data.word], definitions:[data.results]}})\n                      } else {\n                      this.setState({user:{words:[...this.state.user.words, data.word],\n                                          definitions:[...this.state.user.definitions, data.results]}})\n                      }\n             })\n             .catch(err => console.log(err))\n             }\n\n        } else {\n          alert(\"Something is wrong. Try again!\")\n        }\n      }\n    }\n\n    return (\n      <div className=\"App\">\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n\n        { /* Jsx Javascript expression to know when to change the route */\n\n         route === 'home' ? //if this is true then route to home dashboard\n\n             <div className=\"flexbox\">\n               <Board words={this.state.user.words}/>\n               <Board2 definitions={this.state.user.definitions} shuffled={this.state.user.defs_shuffled}/>\n               <button onClick={clickHandler}>Done!</button>\n             </div>\n\n           : (   //else if route is Signin go to Signin\n\n             route === 'signin' ?\n\n             <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n           :\n\n             //else return the route to Register\n\n             <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n\n\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}