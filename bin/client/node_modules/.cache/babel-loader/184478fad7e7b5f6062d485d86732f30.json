{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.loadUser = data => {\n      console.log(data.score);\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          score: data.score\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        console.log(`score: ${this.state.user.score}`);\n        this.setState({\n          isSignedIn: true\n        });\n        let words = [];\n        let definitions = [];\n        let ind_col = [0, 1, 2, 3, 4, 5];\n\n        for (let i = 0; i < 6; i++) {\n          fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n            }\n          }).then(result => result.json()).then(data => {\n            words.push(data.word);\n            definitions.push([ind_col.splice(Math.floor(Math.random() * ind_col.length), 1), data.results]);\n          }).catch(err => console.log(err));\n        }\n\n        this.setState({\n          user: {\n            words: words,\n            definitions: definitions\n          }\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        score: 0,\n        words: [],\n        definitions: [],\n        checked: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    setInterval(() => {\n      this.setState(() => {\n        return {\n          unseen: \"does not display\"\n        };\n      });\n    }, 3000);\n  } //Function to load the user when register form is inputed(pass function to Register Component)\n\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n\n    const clickHandler = () => {\n      console.log(\"Click!\");\n      let counter = 0;\n\n      for (let i = 0; i < 6; i++) {\n        let elem = document.getElementById(i);\n\n        if (elem.children[1].children.length === 1) {\n          counter++;\n        }\n      }\n\n      if (counter < 5) {\n        alert(\"Please drag all definitions to the right words!\");\n      } else {\n        let counter2 = 0;\n\n        for (let i = 0; i < 6; i++) {\n          let elem = document.getElementById(i);\n\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++;\n          }\n        }\n\n        if (counter2 == 6) {\n          alert(\"Well done!\");\n\n          if (!this._isMounted) {\n            this.setState({\n              user: {\n                words: [],\n                definitions: []\n              }\n            });\n          }\n\n          let words = [];\n          let definitions = [];\n          let ind_col = [0, 1, 2, 3, 4, 5];\n\n          for (let i = 0; i < 6; i++) {\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n              \"method\": \"GET\",\n              \"headers\": {\n                \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n              }\n            }).then(result => result.json()).then(data => {\n              if (this.state.user.words.length === 6) {\n                let board = document.getElementsByClassName(\"board\")[1];\n\n                for (let x = 0; x < 6; x++) {\n                  let elem = document.getElementById(`def${x}`);\n                  elem.parentElement.style.height = \"50px\";\n                  board.appendChild(elem);\n                  console.log(`elem ${x} done!`);\n                }\n\n                words.push(data.word);\n                this.setState({\n                  user: {\n                    words: [data.word],\n                    definitions: [[ind_col.splice(Math.floor(Math.random() * ind_col.length), 1), data.results]],\n                    checked: false,\n                    score: this.state.user.score + 6\n                  }\n                });\n                fetch('http://localhost:3001/users', {\n                  method: 'post',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    email: this.state.email,\n                    score: this.state.score\n                  })\n                });\n              } else {\n                this.setState({\n                  user: {\n                    words: [...this.state.user.words, data.word],\n                    definitions: [...this.state.user.definitions, [ind_col.splice(Math.floor(Math.random() * ind_col.length), 1), data.results]]\n                  }\n                });\n                console.log(this.state.user.definitions);\n              }\n            }).catch(err => console.log(err));\n          }\n        } else {\n          if (!this.state.user.checked) {\n            this.setState({\n              user: {\n                checked: true,\n                score: this.state.user.score + counter2\n              }\n            });\n          }\n\n          alert(`You got ${counter2} words correctly. Try again!`);\n        }\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      score: this.state.user.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }),\n    /* Jsx Javascript expression to know when to change the route */\n    route === 'home' ?\n    /*#__PURE__*/\n    //if this is true then route to home dashboard\n    React.createElement(\"div\", {\n      className: \"flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      words: this.state.user.words,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Board2, {\n      definitions: this.state.user.definitions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }\n    }, \"Done!\")) : //else if route is Signin go to Signin\n    route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 14\n      }\n    }) :\n    /*#__PURE__*/\n    //else return the route to Register\n    React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/App.js"],"names":["React","Component","Register","Signin","Navigation","Board","Board2","Card","App","constructor","_isMounted","loadUser","data","console","log","score","setState","user","id","name","email","entries","joined","onRouteChange","route","isSignedIn","state","words","definitions","ind_col","i","fetch","then","result","json","push","word","splice","Math","floor","random","length","results","catch","err","checked","componentDidMount","setInterval","unseen","componentWillUnmount","render","clickHandler","counter","elem","document","getElementById","children","alert","counter2","parseInt","board","getElementsByClassName","x","parentElement","style","height","appendChild","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Board2 from './Components/Board2';\nimport Card from './Components/Card';\n\n\n\nclass App extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n\n    this.state = {\n\n\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n\n      user: {\n\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        score:0,\n        words:[],\n        definitions:[],\n        checked: false\n      }\n\n    }\n  }\n  componentDidMount(){\n  this._isMounted = true;\n  setInterval(() => {\n           this.setState(() => {\n               return { unseen: \"does not display\" }\n           });\n       }, 3000);\n  }\n  //Function to load the user when register form is inputed(pass function to Register Component)\n  loadUser = (data) => {\n    console.log(data.score)\n    this.setState({user: {\n\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      score: data.score\n    }})\n  }\n\n\n\n\n  //Function to Change Routes from Signin and Home Dashboard\n  onRouteChange = (route) => {\n\n    if (route === 'signout') {\n\n      this.setState({isSignedIn: false});\n\n    } else if (route === 'home') {\n      console.log(`score: ${this.state.user.score}`)\n      this.setState({isSignedIn: true});\n      let words = [];\n      let definitions = [];\n      let ind_col = [0,1,2,3,4,5]\n      for (let i = 0; i < 6;i++ ){\n        fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n        {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n          }\n        })\n        .then(result => result.json())\n        .then(data => {\n                  words.push(data.word);\n                  definitions.push([ind_col.splice(Math.floor(Math.random()*ind_col.length), 1), data.results])\n        })\n        .catch(err => console.log(err))\n        }\n      this.setState({user:{words:words,definitions:definitions}})\n\n  }\n    this.setState({route: route});\n  }\n\n  componentWillUnmount() {\n   this._isMounted = false;\n }\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const { isSignedIn, route} = this.state;\n    const clickHandler = () => {\n      console.log(\"Click!\")\n      let counter = 0;\n      for (let i = 0; i<6; i++){\n        let elem = document.getElementById(i);\n        if (elem.children[1].children.length === 1) {\n          counter++\n        }\n      }\n      if (counter < 5){\n        alert(\"Please drag all definitions to the right words!\")\n      } else {\n        let counter2 = 0;\n        for (let i = 0; i<6; i++){\n          let elem = document.getElementById(i);\n          if (parseInt(elem.children[1].children[0].id[3], 10) === i) {\n            counter2++\n          }\n        }\n        if (counter2 == 6) {\n          alert(\"Well done!\")\n          if(!this._isMounted ) {this.setState({user:{words:[],definitions:[]}})}\n          let words = [];\n          let definitions = [];\n          let ind_col = [0,1,2,3,4,5]\n          for (let i = 0; i < 6;i++ ){\n            fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n             {\n               \"method\": \"GET\",\n               \"headers\": {\n                 \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n                 \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n               }\n             })\n             .then(result => result.json())\n             .then(data => {\n                      if (this.state.user.words.length === 6){\n                        let board = document.getElementsByClassName(\"board\")[1]\n                        for (let x = 0;x<6;x++){\n                          let elem = document.getElementById(`def${x}`)\n                          elem.parentElement.style.height = \"50px\"\n                          board.appendChild(elem)\n                          console.log(`elem ${x} done!`)\n                        }\n                        words.push(data.word);\n                        this.setState({user:{words:[data.word],\n                        definitions:[[ind_col.splice(Math.floor(Math.random()*ind_col.length), 1), data.results]],\n                        checked: false,\n                        score:this.state.user.score + 6}});\n                        fetch('http://localhost:3001/users', {\n                            method: 'post',\n                            headers: {'Content-Type': 'application/json'},\n                            body: JSON.stringify({\n                                email: this.state.email,\n                                score: this.state.score\n                            })\n                        })\n                      } else {\n                      this.setState({user:{words:[...this.state.user.words, data.word],\n                        definitions: [...this.state.user.definitions,[ind_col.splice(Math.floor(Math.random()*ind_col.length), 1), data.results]]}})\n                        console.log(this.state.user.definitions)\n                      }\n             })\n             .catch(err => console.log(err))\n             }\n        } else {\n          if (!this.state.user.checked){\n            this.setState({user:{checked:true, score:this.state.user.score + counter2}})\n          }\n          alert(`You got ${counter2} words correctly. Try again!`)\n        }\n      }\n    }\n\n    return (\n      <div className=\"App\">\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} score={this.state.user.score}/>\n\n\n        { /* Jsx Javascript expression to know when to change the route */\n\n         route === 'home' ? //if this is true then route to home dashboard\n\n             <div className=\"flexbox\">\n\n               <Board words={this.state.user.words}/>\n               <Board2 definitions={this.state.user.definitions}/>\n               <button onClick={clickHandler}>Done!</button>\n             </div>\n\n           : (   //else if route is Signin go to Signin\n\n             route === 'signin' ?\n\n             <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n           :\n\n             //else return the route to Register\n\n             <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n\n\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}