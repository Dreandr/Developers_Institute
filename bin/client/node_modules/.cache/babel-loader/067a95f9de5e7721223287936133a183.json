{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board';\nimport Card from './Components/Card';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          words: [],\n          definitions: []\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n        let words = [];\n        let definitions = [];\n\n        for (let i = 0; i < 6; i++) {\n          fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n            }\n          }).then(result => result.json()).then(data => {\n            words.push(data.word);\n            definitions.push(data.results);\n          }).catch(err => console.log(err));\n        }\n\n        this.setState({\n          user: {\n            words: {\n              words\n            },\n            definitions: {\n              definitions\n            }\n          }\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words: [],\n        definitions: []\n      }\n    };\n  } //Function to load the user when register form is inputed(pass function to Register Component)\n\n\n  render() {\n    //Destructuring our states instead of using this.state\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }),\n    /* Jsx Javascript expression to know when to change the route */\n    route === 'home' ?\n    /*#__PURE__*/\n    //if this is true then route to home dashboard\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      id: \"board_1\",\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, this.state.user.words.map((word, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        id: `card_${i}`,\n        className: \"card\",\n        draggable: \"false\",\n        text: word,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Board, {\n      id: \"board_2\",\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"card_1\",\n      className: \"card\",\n      draggable: \"true\",\n      text: \"Card two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })))) : //else if route is Signin go to Signin\n    route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    }) :\n    /*#__PURE__*/\n    //else return the route to Register\n    React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/App.js"],"names":["React","Component","Register","Signin","Navigation","Board","Card","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","words","definitions","onRouteChange","route","isSignedIn","i","fetch","then","result","json","push","word","results","catch","err","console","log","state","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register/Register\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Board from './Components/Board'\nimport Card from './Components/Card'\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n\n\n      //To Route the between signin forms and dashboard\n      route: 'signin',\n      isSignedIn: false,\n\n      user: {\n\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        words:[],\n        definitions:[]\n      },\n\n    }\n  }\n\n  //Function to load the user when register form is inputed(pass function to Register Component)\n  loadUser = (data) => {\n    this.setState({user: {\n\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      words:[],\n      definitions:[]\n    }})\n  }\n\n\n\n\n  //Function to Change Routes from Signin and Home Dashboard\n  onRouteChange = (route) => {\n\n    if (route === 'signout') {\n\n      this.setState({isSignedIn: false});\n\n    } else if (route === 'home') {\n\n      this.setState({isSignedIn: true});\n      let words = [];\n      let definitions = [];\n      for (let i = 0; i < 6;i++ ){\n        fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\n        {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n          }\n        })\n        .then(result => result.json())\n        .then(data => {\n                  words.push(data.word);\n                  definitions.push(data.results);\n        })\n        .catch(err => console.log(err))\n      }\n      this.setState({user: {words:{words}, definitions:{definitions}}})\n    }\n\n    this.setState({route: route});\n  }\n\n  render() {\n\n    //Destructuring our states instead of using this.state\n    const { isSignedIn, route} = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n\n        { /* Jsx Javascript expression to know when to change the route */\n\n         route === 'home' ? //if this is true then route to home dashboard\n\n             <div>\n\n                <main className=\"flexbox\">\n                  <Board id=\"board_1\" className=\"board\">\n                    {\n                      this.state.user.words.map((word, i) =>{\n                        return(\n                          <Card id={`card_${i}`} className=\"card\" draggable=\"false\" text={word}/>\n                        )\n                      })\n                    }\n                  </Board>\n                  <Board id=\"board_2\" className=\"board\">\n                    <Card id=\"card_1\" className=\"card\" draggable=\"true\" text={\"Card two\"}/>\n                  </Board>\n                </main>\n\n             </div>\n\n           : (   //else if route is Signin go to Signin\n\n             route === 'signin' ?\n\n             <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n           :\n\n             //else return the route to Register\n\n             <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n\n\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}