{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dkhor\\\\Desktop\\\\DI_folder\\\\Developers_Institute\\\\bin\\\\client\\\\src\\\\Components\\\\Board.js\";\nimport React from \"react\";\nimport Card from './Card';\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      words: [],\n      definitions: []\n    };\n  }\n\n  componentDidMount() {\n    let words = [];\n    let definitions = [];\n\n    for (let i = 0; i < 6; i++) {\n      fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\", {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\n        }\n      }).then(result => result.json()).then(data => {\n        words.push(data.word);\n        definitions.push(data.results);\n      }).catch(err => console.log(err));\n      this.setState({\n        words: words,\n        definitions: [definitions]\n      });\n    }\n  }\n\n  render() {\n    const dropOff = e => {\n      e.preventDefault();\n      const card_id = e.dataTransfer.getData('card_id');\n      const card = document.getElementById(card_id);\n      card.style.display = \"block\";\n      e.target.appendChild(card);\n    };\n\n    const dragOver = e => {\n      e.preventDefault();\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board_1\",\n      onDrop: dropOff,\n      onDragOver: dragOver,\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, this.state.words.map((word, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        id: `card_1`,\n        className: \"card\",\n        draggable: \"false\",\n        text: word,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }\n      });\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/dkhor/Desktop/DI_folder/Developers_Institute/bin/client/src/Components/Board.js"],"names":["React","Card","Board","Component","constructor","state","words","definitions","componentDidMount","i","fetch","then","result","json","data","push","word","results","catch","err","console","log","setState","render","dropOff","e","preventDefault","card_id","dataTransfer","getData","card","document","getElementById","style","display","target","appendChild","dragOver","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAUC,MAAAA,WAAW,EAAC;AAAtB,KAAX;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,QAAIF,KAAK,GAAG,EAAZ;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBC,MAAAA,KAAK,CAAC,+GAAD,EACL;AACE,kBAAU,KADZ;AAEE,mBAAW;AACT,6BAAmB,2BADV;AAET,4BAAkB;AAFT;AAFb,OADK,CAAL,CAQCC,IARD,CAQMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EARhB,EASCF,IATD,CASMG,IAAI,IAAI;AACJR,QAAAA,KAAK,CAACS,IAAN,CAAWD,IAAI,CAACE,IAAhB;AACAT,QAAAA,WAAW,CAACQ,IAAZ,CAAiBD,IAAI,CAACG,OAAtB;AACT,OAZD,EAaCC,KAbD,CAaOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbd;AAcA,WAAKG,QAAL,CAAc;AAAChB,QAAAA,KAAK,EAACA,KAAP;AAAaC,QAAAA,WAAW,EAAC,CAACA,WAAD;AAAzB,OAAd;AACH;AACA;;AAEDgB,EAAAA,MAAM,GAAE;AACN,UAAMC,OAAO,GAAIC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,OAAO,GAAGF,CAAC,CAACG,YAAF,CAAeC,OAAf,CAAuB,SAAvB,CAAhB;AACA,YAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBL,OAAxB,CAAb;AACAG,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACAT,MAAAA,CAAC,CAACU,MAAF,CAASC,WAAT,CAAqBN,IAArB;AACD,KAND;;AAQA,UAAMO,QAAQ,GAAIZ,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACD,KAFD;;AAGA,wBACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,MAAM,EAAEF,OAFV;AAGE,MAAA,UAAU,EAAEa,QAHd;AAIE,MAAA,SAAS,EAAC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,KAAKhC,KAAL,CAAWC,KAAX,CAAiBgC,GAAjB,CAAqB,CAACtB,IAAD,EAAMP,CAAN,KAAW;AAC9B,0BAAO,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,QAAX;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAqC,QAAA,SAAS,EAAC,OAA/C;AAAuD,QAAA,IAAI,EAAEO,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,CAPJ,CADF;AAcD;;AArDgC;;AAwDnC,eAAed,KAAf","sourcesContent":["import React from \"react\";\r\nimport Card from './Card';\r\n\r\nclass Board extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state={words:[],definitions:[]}\r\n  }\r\n  componentDidMount(){\r\n    let words = [];\r\n    let definitions = [];\r\n    for (let i = 0; i < 6;i++ ){\r\n      fetch(\"https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=6&hasDetails=definitions&letterpattern=/^\\S+$\",\r\n      {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"4ca040923dmshca781b0df1ed411p18c182jsn7d523d812233\"\r\n        }\r\n      })\r\n      .then(result => result.json())\r\n      .then(data => {\r\n                words.push(data.word);\r\n                definitions.push(data.results);\r\n      })\r\n      .catch(err => console.log(err))\r\n      this.setState({words:words,definitions:[definitions]})\r\n  }\r\n  }\r\n\r\n  render(){\r\n    const dropOff = (e) => {\r\n      e.preventDefault();\r\n      const card_id = e.dataTransfer.getData('card_id');\r\n      const card = document.getElementById(card_id);\r\n      card.style.display = \"block\";\r\n      e.target.appendChild(card);\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n      e.preventDefault();\r\n    }\r\n    return(\r\n      <div\r\n        id=\"board_1\"\r\n        onDrop={dropOff}\r\n        onDragOver={dragOver}\r\n        className=\"board\"\r\n      >\r\n        {\r\n          this.state.words.map((word,i) =>{\r\n            return(<Card id={`card_1`} className=\"card\" draggable=\"false\" text={word}/>)\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}